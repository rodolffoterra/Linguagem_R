library(reader)
install.packages('readr')
library(reader)
library(readr)
library(dplyr)
sono_df <- read_csv('\\dplyr\sono.csv')
sono_df <- read_csv('\dplyr\sono.csv')
sono_df <- read_csv('sono.csv')
sono_df <- read_csv('sono.csv')
getwd()
sono_df <- read_csv('//dplyr/sono.csv')
sono_df <- read_csv('/dplyr/sono.csv')
sono_df <- read_csv('E:/Portfólio/Linguagem_R_Treinamento/dplyr/dplyr/sono.csv')
sono_df <- read_csv('E:/Portfólio/Linguagem_R_Treinamento/dplyr/sono.csv')
View(sono_df)
head(sono_df)
class(sono_df)
str(sono_df)
# Função glimpse() pode ser usada no lugar da função str()
glimpse(sono_df)
#Aplica mutate
glimpse(mutate(sono_df, peso_libras = sono_total / 0.45359237))
# Contagem de histyograma
count(sono_df, size = 10)
count(sono_df, size = 10)
# Contagem de histyograma
count(sono_df, cidade)
hist(sono_df$sono_total)
samplen(sono_df, size = 10)
# Amostragem
sample_n(sono_df, size = 10)
sleepData <- select(sono_df, nome, sono_total)
head(sleepData)
select(sono_df, nome)
select(sono_df, nome:cidade)
select(sono_df, nome:pais)
#filter()
filter(sono_df, sono_total >= 16)
filter(sono_df, sono_total >= 16, peso <= 80)
filter(sono_df, sono_total >= 16, peso >= 80)
filter(sono_df, cidade %in% c('Recife','Curitiba'))
filter(sono_df, cidade %in% c('Recife','Curitiba'))
filter(sono_df, sono_total >= 16)
filter(sono_df, sono_total >= 16, peso >= 80)
filter(sono_df, cidade %in% c('Recife','Curitiba'))
# arrange()
sono_df %>% arrenge(cidade) %>% head
sono_df %>% arrenge(cidade) %>% head
sono_df %>% arrange(cidade) %>% head
sono_df %>% arrange(cidade) %>% head
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, sono_total) %>%
head()
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, sono_total) %>%
filter(sono_total >=16)
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, desc(sono_total) %>%
filter(sono_total >=16)
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, desc(sono_total)) %>%
filter(sono_total >=16)
sono_df %>%
select(nome, cidade, sono_total) %>%
arrange(cidade, desc(sono_total)) %>%
filter(sono_total >=16)
sono_df %>%
mutate(novo_indice = sono / peso) %>%
head()
sono_df %>%
mutate(novo_indice = sono_total / peso) %>%
head()
head(sono_df)
head(sono_df)
sono_df %>%
mutate(novo_indice = sono_total / peso) %>%
head()
head(sono_df)
sono_df %>%
mutate(novo_indice = sono_total / peso,
peso_libra = peso = 0.45359237) %>%
head
sono_df %>%
mutate(novo_indice = sono_total / peso,
peso_libras = peso = 0.45359237) %>%
head
sono_df %>%
mutate(novo_indice = sono_total / peso,
peso_libras = peso / 0.45359237) %>%
head
sono_df %>%
sumarrise(media_sono = mean(sono_total))
sono_df %>%
summarise(media_sono = mean(sono_total))
sono_df %>%
summarise(media_sono = mean(sono_total),
min_sono = min(sono_total),
mas_sono = max(sono_total),
total = n)
sono_df %>%
summarise(media_sono = mean(sono_total),
min_sono = min(sono_total),
mas_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade) %>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade %in% c('Recife','Curitiba')%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade %in% c('Recife','Curitiba'))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade %in% c('Recife','Curitiba'))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
filter(sono_df, cidade %in% c('Recife','Curitiba'))
filter(sono_df, cidade %in% c('Recife','Curitiba'))
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba'))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba')))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade) %>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(cidade, filter(sono_df, cidade %in% c('Recife','Curitiba')))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba')))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba')))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba'))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n()))
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba')))%>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
sono_df %>%
group_by(filter(sono_df, cidade %in% c('Recife','Curitiba'))) %>%
summarise(avg_sono = mean(sono_total),
min_sono = min(sono_total),
max_sono = max(sono_total),
total = n())
head(select(sono_df, nome, sono_total))
sono_df %>%
select(nome, sono_total) %>%
head
sono_df %>%
mutate(novo_indice = round(sono_total * peso)) %>%
arrange(desc(novo_indice)) %>%
select(cidade, novo_indice)
sono_df %>%
mutate(novo_indice = round(sono_total * peso)) %>%
arrange(novo_indice) %>%
select(cidade, novo_indice)
sono_df %>%
mutate(novo_indice = round(sono_total * peso)) %>%
arrange(desc(novo_indice)) %>%
select(cidade, novo_indice)
View(sono_df)
library(hflights)
install.packages('hflights')
library(hflights)
library(dplyr)
flights <- tbl_df(hflights)
flights
# Resumindo os dados
str(flights)
glimpse(flights)
# vizualizando como dataframe
data.frame(head(flights))
# Filtrando os dados com slice
flights[flights$Month == 1 & flights$DayofMonth == 1, ]
# vizualizando como dataframe
View(data.frame(head(flights)))
View(flights)
#Aplicando Filter
filter(flights, Month == 1, DayofMonth == 1)
filter(flights, UniqueCarrir == "AA" | UniqueCarrir == "UA"))
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA"))
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA"))
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
# Select os dados
select(flights, Year, DayofMonth, contains("taxis"), contains("Delay"))
# Select os dados
# a função contains("xx") <- encontra a coluna que possui os nomes dentro que eu coloquei,
# não preciso saber o no me da coluna inteira.
select(flights, Year, DayofMonth, contains("taxi"), contains("Delay"))
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrage(DepDelay)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(Distance, AirTime) %>%
mutate(Spped = Distance/AirTime*60)
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)))
View(data.frame(head(flights)))
View(data.frame(head(flights)))
View(flights)
View(flights)
table(flights$Dest)
names(flights$Dest)
names(flights$Dest)
(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE))
flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)
with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE))
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)))
head(aggregate(ArrDelay ~Dest, flights, mean))
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE)
flights %>%
group_by(Month, DayofMonth)
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE)
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE)
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE))
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE))
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE))
View(flights)
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE))
flights[flights$Month == 1 & flights$DayofMonth == 1, ]
View(data.frame(head(flights)))
data.frame(head(flights))
data.frame(head(flights))
str(flights)
glimpse(flights)
filter(flights, Month == 1, DayofMonth == 1)
filter(flights, UniqueCarrier == "AA" | UniqueCarrier == "UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
select(flights, Year, DayofMonth, contains("taxi"), contains("Delay"))
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(Distance, AirTime) %>%
mutate(Spped = Distance/AirTime*60)
with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE))
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm = TRUE)))
head(aggregate(ArrDelay ~ Dest, flights, mean))
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = TRUE))
View(flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE)
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE)
flights %>%
group_by(Month, DayofMonth) %>%
tally(sort = FALSE)
# Instalando pos pacotes
install.packages("tidyr")
library(tidyr)
library(ggplot2)
dados <- data.frame(
Nome = c('Geografia','Leteratura','Biologia'),
Regiao_A = c(97,80,84),
Reghião_B = c(86,90,91)
)
dados
dados <- data.frame(
Nome = c('Geografia','Leteratura','Biologia'),
Regiao_A = c(97,80,84),
Região_B = c(86,90,91)
)
dados %>%
gather(Regiao, NotaFinal, Regiao_A:Regiao_B)
dados <- data.frame(
Nome = c('Geografia','Leteratura','Biologia'),
Regiao_A = c(97,80,84),
Regiao_B = c(86,90,91)
)
dados %>%
gather(Regiao, NotaFinal, Regiao_A:Regiao_B)
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = saple(rep(c('controle','tratamento', each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4))
)
df2
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = saple(rep(c('controle','tratamento', each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4))
)
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = saple(rep(c('controle','tratamento', each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
df2
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = saple(rep(c('controle','tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
df2
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = sample(rep(c('controle','tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
df2
set.seed(10)
df2 <- data.frame(
id = 1:4,
acao = sample(rep(c('controle','tratamento'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4)
)
df2
df2_organizado1 <- df2 %>%
gather(key, time, -id, -acao)
df2_organizado1 <- df2 %>%
gather(key, time, -id, -acao)
df2_organizado1 %>% head(8)
df2_organizado1 %>% head(16)
df2_organizado2 <- df2_organizado2 %>%
separate(key, into = c('localidade','tempo'), sep = '\\.')
df2_organizado1 %>% head(9)
df2_organizado2 <- df2_organizado2 %>%
separate(key, into = c('localidade','tempo'), sep = '\\.')
df2_organizado2 %>% head(9)
df2_organizado2 <- df2_organizado1 %>%
separate(key, into = c('localidade','tempo'), sep = '\\.')
df2_organizado2 %>% head(9)
set.seed(1)
df3 <- data.frame(
participante = c('p1','p2','p3','p4','p5','p6'),
info = c('g1m','g1m','g1f','g2m','g2m','g2m'),
day1score = rnorm(n = 6, mean = 80, sd = 15),
day2score = rnorm(n = 6, mean = 88, sd = 8))
print(df3)
df3 %>%
gather(day, score, c(day1score, day2score))
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
spread(day, score)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, info = c*('group','gender'), sep = 2
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, info = c=('group','gender'), sep = 2)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, info = c('group','gender'), sep = 2)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, into = c('group','gender'), sep = 2)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, into = c('group','gender'), sep = 2) %>%
unite(infoAgain, group, gender)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, into = c('group','gender'), sep = 2) %>%
unite(infoAgain="\\", group, gender)
df3 %>%
gather(day,score, c(day1score, day2score)) %>%
separate(col = info, into = c('group','gender'), sep = 2) %>%
ggplot(aes( x = day, y = score)) +
geom_point() +
facet_wrap(~ group) +
geom_smooth(method = 'lm', aes(group = 1), se = F)
